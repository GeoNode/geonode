.. _create_geonode_db:

==============
Database Setup
==============

In this section we are going to setup users and databases for GeoNode in PostgreSQL.

.. warning:: Be sure you have successfully completed the steps in the previous section.

Databases and Permissions
=========================
First create the `geonode` user. GeoNode is going to use this user to access the
database

.. code-block:: bash

    sudo -u postgres createuser -P geonode

You will be prompted asked to set a password for the user. Enter `geonode` as password.

Create database `geonode` and `geonode_data` with owner `geonode`

.. code-block:: bash

    sudo -u postgres createdb -O geonode geonode
    sudo -u postgres createdb -O geonode geonode_data

Next create PostGIS extension

.. code-block:: bash

    sudo -u postgres psql -d geonode_data -c 'CREATE EXTENSION postgis;'

... and adjust permissions

.. code-block:: bash

    sudo -u postgres psql -d geonode_data -c 'GRANT ALL ON geometry_columns TO PUBLIC;'
    sudo -u postgres psql -d geonode_data -c 'GRANT ALL ON spatial_ref_sys TO PUBLIC;'
    sudo -u postgres psql -d geonode_data -c 'GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO geonode;'

Now we are going to change user access policy for local connections in file `pg_hba.conf`

.. code-block:: bash

    sudo vim /etc/postgresql/10/main/pg_hba.conf

Scroll down to the bottom of the document. We only need to edit one line. Change

.. code-block:: bash

    # "local" is for Unix domain socket connections only
    local   all             all                                     peer

Into

.. code-block:: bash

    # "local" is for Unix domain socket connections only
    local   all             all                                     trust

.. note::

    If your PostgreSQL database resides on a separate machine, you have to allow
    remote access to the databases in the pg_hba.conf for the `geonode` user and
    tell PostgreSQL to accept non local connections in your `postgresql.conf` file

Then restart `PostgreSQL` to make the change effective

.. code-block:: bash

    sudo service postgresql restart

PostgreSQL is now ready. To test the configuration try to connect to the `geonode`
database as `geonode`

.. code-block:: bash

    psql -U geonode geonode
    \q
