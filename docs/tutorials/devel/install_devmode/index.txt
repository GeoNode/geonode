.. _install_devmode:

Install GeoNode for Development
===============================


In order to install Geonode 2.0 in developing mode on Ubuntu 12.04 the following steps are required:

#. install build tools and libraries (see Step 1)
#. install dependencies (Python and Java) and supporting tools (see Step 2)
#. add PPA repository (see Step 3)
#. set up a virtual environment (virtualenv)
#. clone geonode from github and install it in the virtual environment
#. run paver to get install geoserver and start the development servers

.. note:: The following steps have to be executed in your terminal. The *Steps 1 – 4a* have to be done as a root user, therefore don´t forget to type sudo in front (as shown in the steps)!

**Step 1** Install build tools and libraries::

    $ sudo apt-get install build-essential libxml2-dev libxslt-dev


**Step 2** Install dependencies

*Python native dependencies*::

    $ sudo apt-get install python-dev python-virtualenv python-imaging python-lxml python-pyproj python-shapely python-nose python-httplib2

*Java dependencies*::

    $ sudo apt-get install -y --force-yes openjdk-6-jdk ant maven2 --no-install-recommends

*supporting tools*::

    $ sudo apt-get install -y git gettext

**Step 3** add a new PPA repository

This is required for static development::

    $ sudo add-apt-repository ppa:chris-lea/node.js
    $ sudo apt-get update
    $ sudo apt-get install nodejs
    $ sudo npm install -g bower
    $ sudo npm install -g grunt-cli

**Step 4** set up a virtual environment

Here is where Geonode will later be running.
.. note:: Virtualenv was installed in *Step 2 above*.

***Step 4a** Download and install a virutalenvwrapper*::

    $ sudo pip install virtualenvwrapper

***Step 4b** Add the virtualenvwrapper to your new environement.*::

    $ export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
    $ export WORKON_HOME=~/.venvs
    $ source /usr/local/bin/virtualenvwrapper.sh
    $ export PIP_DOWNLOAD_CACHE=$HOME/.pip-downloads

*Step 4c*  set up the local virtual environment for Geonode *Note: needs to be done before you can download and install Geonode*::

    $ mkdir your_folder
    $ mkvirtualenv geonode

This creates a new directory where you want your project to be and creates a new virtualenvironment

**Step 5**

To download the latest geonode version from github, the command *clone* is used::

    $ git clone https://github.com/GeoNode/geonode.git

In order to go on and complete the installation you have to direct to your now exisiting geonode folder::

    $ cd geonode

**Step 6**

The last step is to compile GeoServer and start the development servers::

    $ paver setup
    $ paver start

Now you should be able to visit the geonode site by typing http://localhost:8000 into your browser window.

To stop the server::

    $ Ctrl c
    $ paver stop
    
**Restart server**

With every restart of your machine, you have to restart geonode as well. That means, you will not be able to open http://localhost:8000 directly after starting your machine new. In order to be able to use geonode now, you have to activate your virtualenvironment and to start the development servers. 

.. note:: *your_name* is the name of your machine and personal folder!

#. Activate virtualenv
 
   To activate your virtualenv you just need to type::
   
       $ workon geonode

   .. note:: Be careful with this, you might have another path, so check first where your virtualenv has been installed!

#. Start the server
  
   To start the server go to your geonode folder::
   
       $ cd geonode
   
   and then run::
   
       $ paver start_geoserver
       $ paver start_django

   Now you are able to access http://localhost:8000 again.

.. note:: Remember that you have to do these steps each time you restart your machine!!

**Next step**

Create a superuser so you can log on to your local geonode installation at http://localhost:8000

.. code-block:: console

    $ django-admin.py createsuperuser –-settings=geonode.settings

