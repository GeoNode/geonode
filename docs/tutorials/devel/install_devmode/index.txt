.. _install_devmode:

Install GeoNode for Development
===============================


In order to install Geonode 2.0 in developing mode on Ubuntu 12.04 the following steps are required:

#. install build tools and libraries
#. install dependencies (Python and Java) and supporting tools
#. add PPA repository
#. set up a virtual environment (virtualenv)
#. clone geonode from github and install it in the virtual environment
#. run paver to get install geoserver and start the development servers

.. note:: The following steps have to be executed in your terminal. The steps have to be done as a root user, therefore don´t forget to type sudo in front!

#. Install build tools and libraries

   .. code-block:: console

    $ sudo apt-get install build-essential libxml2-dev libxslt-dev


#. Install dependencies

   *Python native dependencies*

   .. code-block:: console

    $ sudo apt-get install python-dev python-virtualenv python-imaging python-lxml python-pyproj python-shapely python-nose python-httplib2

   *Java dependencies*

   .. code-block:: console

    $ sudo apt-get install -y --force-yes openjdk-6-jdk ant maven2 --no-install-recommends

   *supporting tools*

   .. code-block:: console

    $ sudo apt-get install -y git gettext

#. Add a new PPA repository

   This is required for static development

   .. code-block:: console

    $ sudo add-apt-repository ppa:chris-lea/node.js
    $ sudo apt-get update
    $ sudo apt-get install nodejs
    $ sudo npm install -g bower
    $ sudo npm install -g grunt-cli

#. Set up a virtual environment

   Here is where Geonode will later be running.

   .. note:: Virtualenv was installed in the second step (python dependencies).

   #. Download and install a virutalenvwrapper

      .. code-block:: console

       $ sudo pip install virtualenvwrapper

   #. Add the virtualenvwrapper to your new environement

      .. code-block:: console

       $ export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
       $ export WORKON_HOME=~/.venvs
       $ source /usr/local/bin/virtualenvwrapper.sh
       $ export PIP_DOWNLOAD_CACHE=$HOME/.pip-downloads

   #. set up the local virtual environment for Geonode 

      .. note:: This needs to be done before you can download and install Geonode!

      .. code-block:: console

       $ mkdir your_folder
       $ mkvirtualenv geonode

      This creates a new directory where you want your project to be and creates a new virtualenvironment

#. Get the code

   To download the latest geonode version from github, the command *clone* is used

   .. code-block:: console

    $ git clone https://github.com/GeoNode/geonode.git

   In order to go on and complete the installation you have to direct to your now exisiting geonode folder

   .. code-block:: console

    $ cd geonode

#. Start the server

   The last step is to compile GeoServer and start the development servers

   .. code-block:: console

    $ paver setup
    $ paver start

   Now you should be able to visit the geonode site by typing http://localhost:8000 into your browser window.

   To stop the server

   .. code-block:: console

    $ Ctrl c
    $ paver stop

#. Create a superuser

   Create a superuser so you can log on to your local geonode installation at http://localhost:8000

   .. code-block:: console

       $ django-admin.py createsuperuser –-settings=geonode.settings

#. Restart server

   With every restart of your machine, you have to restart geonode as well. That means, you will not be able to open http://localhost:8000   directly after starting your machine new. In order to be able to use geonode now, you have to activate your virtualenvironment and to start the development servers. 

   .. note:: *username* is the name of your machine and personal folder!

   #. Activate virtualenv

      To activate your virtualenv you just need to type

      .. code-block:: console

       $ workon geonode

      .. todo:: this is not working for me!!! My steps still have to be

      or

      .. code-block:: console

       $ source /home/username/.venvs/geonode/bin/activate

      .. note:: Be careful with the path, it might not be the same for you!

   #. Start the server

      .. code-block:: console

    $ cd geonode
    $ paver start_geoserver
    $ paver start_django

      Now you are able to access http://localhost:8000 again.

      .. note:: Remember that you have to do these steps each time you restart your machine!!

.. hint:: Now you've followed these installation instructions, geonode is running in development mode. This also means that you are using all the default settings of geonode. If you want to change them, e.g use Tomcat instead of Jetty, or Postgresql instead of sqlite3, you may follow the steps from the section **Configure Manually** in :ref:`complete_install`.

.. toctree::
   :maxdepth: 1

   /admin/install/complete_install

