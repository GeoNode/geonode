.. _admin_workshop:

=======================
Administrators Workshop
=======================

Welcome to the GeoNode Training `Administrators Workshop` documentation v\ |release|.

This workshop will teach how to install and manage a deployment of the `GeoNode <http://geonode.org/>`_ software application.
At the end of this section you will master all the GeoNode sections and entities from an administrator perspective.

You will know how to:

1. Use the GeoNodeâ€™s Django Administration Panel.
2. Use the console Management Commands for GeoNode.
3. Configure and customize your GeoNode installation.

*Prerequisites*

    Before proceeding with the reading, it is strongly recommended to be sure having clear the following concepts:

    1. GeoNode and Django framework concepts
    2. Good knowledge of Python
    3. Good knowledge of what is a geospatial server and geospatial web services.
    4. Good knowledge of what is metadata and catalog.
    5. Good knowledge of HTML and CSS.

.. toctree::
    :hidden:

    geoserver_geonode_security/index
    admin_panel/index
    admin_mgmt_commands/index
    csw_settings/index
    ldap/index
    customize_lookfeel/index
    debug_geonode/index
    default_lang/index
    more_on_security_and_permissions/index
    loading_data_into_geonode/index
    s3_config/index
    backup_restore/index
    database_shards/index

:ref:`geoserver_geonode_aa`
    GeoNode interacts with GeoServer through an advanced security mechanism based on OAuth2 Protocol and GeoFence. This section is a walk through of the configuration and setup of GeoNode and GeoServer Advanced Security.

:ref:`admin_panel`
    GeoNode has an administration panel based on the Django admin which can be used to do some database operations. Although most of the operations can and should be done through the normal GeoNode interface, the admin panel provides a quick overview and management tool over the database.

:ref:`admin_mgmt_commands`
    GeoNode comes with administrative commands to help with day to day tasks. This section shows the list of the ones that come from the GeoNode application.

:ref:`admin_csw_settings`
    `pycsw <http://pycsw.org/>`_ is the default CSW server implementation provided with GeoNode. This section will explain how to configure GeoNode to operate against alternate CSW server implementations.

:ref:`ldap`
    This module will allow you to add LDAP authentication to your GeoNode instance.

:ref:`customize_admin`
    You might want to change the look of GeoNode, editing the colors and the logo of the website and adjust the templates for your needs. To do so, you first have to set up your own geonode project from a template. If you've successfully done this, you can go further and start theming your geonode project.

:ref:`debug_geonode`
    There are several mechanisms to debug GeoNode installations, the most common ones are discussed in this section.

:ref:`default_language`
    GeoNode's default language is English, but GeoNode users can change the interface language with the pulldown menu at the top-right of most GeoNode pages.  Once a user selects a language GeoNode remembers that language for subsequent pages.

:ref:`manage`
    This tutorial will guide you through the steps that can be done in order to restrict the access on your data uploaded to geonode.

    First of all it will be shown how a user can be created and what permissions he can have. Secondly we will take a closer look on to layers, maps and documents and the different opportunities you have in order to ban certain users from viewing or editing your data.

:ref:`data`
    This module will walk you through the various options available to load data into your GeoNode from GeoServer, on the command-line or programmatically. You can choose from among these techniques depending on what kind of data you have and how you have your geonode setup.

:ref:`s3_config`
    This section will show you how to configure your GeoNode instance to utilize an Amazon S3 Bucket for your site's static and media files.

:ref:`backup_restore_geonode`
    How to perform a full backup / restore of GeoNode and GeoServer catalogs and how to migrate data. Customization backup / restore fixtures and data manglers.

:ref:`datastore_shards`
    How to use the PostGIS datastore shards contrib application in order to have GeoServer stores containing a fewer number of layers. Useful for organizations with hundreds of layers.
