.. module:: geoserver.data_format

.. _geoserver.data_format:

Adding a GDAL Supported Format
------------------------------

In case the GDAL libraries are available, it is possible to access to several GDAL's supported data formats.
Actually, the available GDAL plugins allow to support DTED, EHdr, ERDASImg, MrSID, JP2K (via MrSID Driver) and NITF data formats.
Moreover, in case a valid license have been purchased and the proper native library is available, also ECW, JP2K (via ECW) and JP2K (via Kakadu) are supported.
This section provides instructions to add and publish a MrSID, ECW and JP2K datasets.

   .. warning::
    
      This assumes the GeoServer image GDAL plug-in is already installed. The GDAL plugin is normally an extension.
	  
	  If the store described in this section are not avaiable, install the 'geoserver-2.2-SNAPSHOT-gdal-plugin' from :file:`%TRAINING_ROOT%\\data\\plugins\\`. Just decompress the zip file into  :file:`%TRAINING_ROOT%\\webapps\\geoserver\\WEB-INF\\lib\\` and restart GeoServer.

MrSID Data Set
^^^^^^^^^^^^^^

#. Open the web browser and navigate to the GeoServer `Welcome Page <http://localhost:8083/geoserver>`_.

#. Select :guilabel:`Add stores` from the interface. 

   .. figure:: img/geotiff_addstores.png

#. Select :guilabel:`MrSID - MrSID Coverage Format` from the set of available Raster Data Sources. 

   .. figure:: img/gdal_sources.png

#. Specify a proper name (as an instance, :file:`c3008957_nes_20`) in the :guilabel:`Data Source Name` field of the interface.

#. Specify :file:`file:%TRAINING_ROOT%/data/user_data/c3008957_nes_20/c3008957_nes_20.sid` as URL of the sample data in the :guilabel:`Connections Parameter's - URL` field. (replace **%TRAINING_ROOT%** with your current training root directory)

   .. figure:: img/gdal_addraster.jpg

#. Click :guilabel:`Save`. 

#. Assign a proper layername (e.g :file:`c3008957_nes_20`) then publish the layer by clicking on the :guilabel:`publish` link.

   .. figure:: img/gdal_publish.jpg
   
#. click on :guilabel:`Save` when done. 

At this point the MrSID data is being published with GeoServer. 

#. Click the :guilabel:`Layer Preview` link in the left GeoServer menu. 

#. Look for a *geosolutions:c3008957_nes_20* layer and click the :guilabel:`OpenLayers` link beside of it. 

   .. figure:: img/gdal_preview.jpg

   .. figure:: img/gdal_openlayer.jpg

ECW Data Set
^^^^^^^^^^^^^^

.. warning:: Attention, you need a license in order to use ECW data sets. Here we are using a free distributed ECW file only for demonstration.

ECW (Enhanced Compression Wavelet) is a proprietary wavelet compression image format optimized for aerial and satellite imagery.

#. Open the web browser and navigate to the GeoServer `Welcome Page <http://localhost:8083/geoserver>`_.

#. Select :guilabel:`Add stores` from the interface. 

   .. figure:: img/geotiff_addstores.png

#. Select :guilabel:`ECW - ECW Coverage Format` from the set of available Raster Data Sources. 

   .. figure:: img/ecw.png

#. Specify a proper name (as an instance, :file:`TerraColor_Sydney_AU_15m`) in the :guilabel:`Data Source Name` field of the interface. 

#. Specify :file:`file:%TRAINING_ROOT%/data/user_data/tc_sydney_au_ecw/TerraColor_Sydney_AU_15m.ecw` as URL of the sample data in the :guilabel:`Connections Parameter's - URL` field (replace **%TRAINING_ROOT%** with your current training root directory).

   .. figure:: img/ecw0.png

#. Click :guilabel:`Save`. 

#. Assign a proper layername (e.g :file:`TerraColor_Sydney_AU_15m`) then publish the layer by clicking on the :guilabel:`publish` link. 

   .. figure:: img/ecw1.png

At this point the ECW data is being published with GeoServer. 

#. Click the :guilabel:`Layer Preview` link in the left GeoServer menu. 

#. Look for a *geosolutions:TerraColor_Sydney_AU_15m* layer and click the :guilabel:`OpenLayers` link beside of it. 

   .. figure:: img/ecw3.png

   .. figure:: img/ecw4.png


JP2K Data Set
^^^^^^^^^^^^^^

JPEG 2000 is a image coding system that uses state-of-the-art compression techniques based on wavelet technology.

#. Open the web browser and navigate to the GeoServer `Welcome Page <http://localhost:8083/geoserver>`_.

#. Select :guilabel:`Add stores` from the interface. 

   .. figure:: img/geotiff_addstores.png

#. Select :guilabel:`JP2ECW - JP2 (ECW) Coverage Format` from the set of available Raster Data Sources. 

   .. note:: We used :guilabel:`JP2ECW - JP2 (ECW) Coverage Format` because :guilabel:`JP2MrSID - JP2 (MrSID) Coverage Format` is not fully stable, and may not work properly especially with several Linux distributions.

   .. figure:: img/jpeg2k0.png

#. Specify a proper name (as an instance, :file:`TerraColor_Sydney_AU_15m_JP2K`) in the :guilabel:`Data Source Name` field of the interface. 

#. Specify :file:`file:%TRAINING_ROOT%/data/user_data/tc_sydney_au_jp2/TerraColor_Sydney_AU_15m.jp2` as URL of the sample data in the :guilabel:`Connections Parameter's - URL` field. (replace **%TRAINING_ROOT%** with your current training root directory)

   .. figure:: img/jpeg2k1.png

#. Click :guilabel:`Save`. 

#. Assign a proper layername (e.g :file:`TerraColor_Sydney_AU_15m_JP2K`) then publish the layer by clicking on the :guilabel:`publish` link. 

   .. figure:: img/jpeg2k2.png

   .. figure:: img/jpeg2k3.png

At this point the JP2K data is being published with GeoServer. 

#. Click the :guilabel:`Layer Preview` link in the left GeoServer menu. 

#. Look for a *geosolutions:TerraColor_Sydney_AU_15m_JP2K* layer and click the :guilabel:`OpenLayers` link beside of it. 

