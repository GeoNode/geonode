name: Docker Image (Build and Push)

on:
  push:
    branches: [ master ]
    paths: 
      - "docker/**"

jobs:
  geoserver:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'docker/geoserver/**'
      - uses: ./.github/actions/build_and_push
        if: steps.changes.outputs.src == 'true'
        with:
          image: "geoserver"
          branch: "master"
          tag: "latest"
          push: true
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  postgis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'docker/postgis/**'
      - uses: ./.github/actions/build_and_push
        if: steps.changes.outputs.src == 'true'
        with:
          image: "postgis"
          branch: "master"
          tag: "latest"
          push: true
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  nginx:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'docker/nginx/**'
      - uses: ./.github/actions/build_and_push
        if: steps.changes.outputs.src == 'true'
        with:
          image: "nginx"
          branch: "master"
          tag: "latest"
          push: true
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  geoserver_data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'docker/geoserver_data/**'
      - uses: ./.github/actions/build_and_push
        if: steps.changes.outputs.src == 'true'
        with:
          image: "geoserver_data"
          branch: "master"
          tag: "latest"
          push: true
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  letsencrypt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'docker/letsencrypt/**'
      - uses: ./.github/actions/build_and_push
        if: steps.changes.outputs.src == 'true'
        with:
          image: "letsencrypt"
          branch: "master"
          tag: "latest"
          push: true
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
