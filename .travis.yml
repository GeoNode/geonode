sudo: required
language: python
dist: xenial

cache:
  pip: true
  directories:
    - $HOME/buildout-cache

before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log

services:
  - docker
  - postgresql

addons:
  hosts:
    - geonode
  postgresql: 9.6
  apt:
    packages:
      - postgresql-9.6-postgis-2.4
      - nginx
  firefox: "latest-esr"

matrix:
  fast_finish: true
  include:
    - name: "Selenium Integration Tests"
      python: 3.5
      env:
          - TEST_RUN_SELENIUM: 'True'
    - name: "Selenium Integration Tests SPCGeonode"
      python: 3.5
      env:
          - TEST_RUN_SELENIUM: 'True'
          - SPCGEONODE: 'True'

branches:
  only:
    - master
    - 2.8.x
    - 2.6.x

before_install:
  - if [ "$TEST_RUN_SELENIUM" = "True" ]; then
      git clone --depth 1 https://github.com/GeoNode/geonode-selenium.git;
      export GEONODE_REPOSITORY=$(pwd);
      GECKODRIVER_VERSION="v0.24.0";
    else
      sudo apt-get update
      sudo /etc/init.d/postgresql stop
      sudo /etc/init.d/postgresql start 9.6
      mkdir -p $HOME/buildout-cache/{eggs,downloads};
      scripts/misc/geoserver_server_setup.sh before_install;
      scripts/misc/qgis_server_setup.sh before_install;
      chmod +x scripts/misc/bdd_setup.sh;
      scripts/misc/bdd_setup.sh before_install;
    fi

install:
  - if [ "$TEST_RUN_SELENIUM" = "True" ]; then
      pip install -r geonode-selenium/requirements.txt;
      wget https://download.osgeo.org/geotiff/samples/spot/chicago/UTM2GTIF.TIF -P geonode-selenium/data;
      wget https://github.com/mozilla/geckodriver/releases/download/$GECKODRIVER_VERSION/geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz -O geckodriver.tar.gz;
      mkdir bin;
      tar zxf geckodriver.tar.gz -C bin;
      export PATH=$PATH:$PWD/bin;
    else
      sudo apt-get -qq -y update;
      sudo apt-get install -y libgdal1i python-gdal gdal-bin spatialite-bin;
      sudo apt-get install -y python-virtualenv python-imaging python-lxml python-pyproj python-shapely python-nose python-httplib2 python-httplib2 gettext;
      sudo apt-get install -y python-dev libxml2 libxml2-dev libxslt1-dev zlib1g-dev libjpeg-dev libpq-dev libgdal-dev git default-jdk;
      sudo apt-add-repository -y ppa:webupd8team/java; sudo apt update;
      echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections;
      echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections;
      sudo apt install -y oracle-java8-set-default ant maven;
      sudo update-java-alternatives --set java-8-oracle;
      export JAVA_HOME=$(readlink -f /usr/bin/java | sed "s:bin/java::")
      export PATH=$JAVA_HOME'bin/java':$PATH
      pip install -r requirements.txt --upgrade;
      pip install -e . --upgrade;
      pip install pygdal==`gdal-config --version`.*;
      pip install codecov;
    fi

before_script:
  - if [ "$TEST_RUN_SELENIUM" = "True" ]; then
      sudo service nginx stop;
    else
      echo "Initialize DB";
      psql -U postgres -c "create extension postgis";
      chmod +x scripts/misc/create_dbs_travis.sh;
      scripts/misc/create_dbs_travis.sh before_script;
      echo "For GeoServer Server Travis steps";
      scripts/misc/geoserver_server_setup.sh before_script;
      echo "For QGIS Server Travis steps";
      scripts/misc/qgis_server_setup.sh before_script;
      scripts/misc/bdd_setup.sh before_script;
      echo "Start NGINX server";
      sudo nginx -s stop;
      sudo nginx -c `pwd`/scripts/misc/nginx_integration.conf;
      echo "Setup GeoNode";
      paver setup;
    fi

script:
  - if [ "$TEST_RUN_SELENIUM" = "True" ] && [ "$SPCGEONODE" = "True" ]; then
      geonode-selenium/test-docker.sh;
    elif [ "$TEST_RUN_SELENIUM" = "True" ]; then
      docker-compose -f docker-compose.yml -f docker-compose.override.localhost.yml up --build -d;
      URL=http://localhost;
      wget --timeout=15 --waitretry=10 --tries=60 --retry-connrefused -c $URL >/dev/null &&
      wget --timeout=15 --waitretry=10 --tries=60 --retry-connrefused -c $URL/geoserver >/dev/null;
      GEONODE_USER=admin GEONODE_PASS=admin GEONODE_URL=$URL geonode-selenium/test.sh;
    else
      paver run_tests --coverage --local false;
    fi

after_script:
  - if [ "$TEST_RUN_SELENIUM" = "True" ]; then
      true;
    else
      echo "For GeoServer Server Travis steps";
      scripts/misc/geoserver_server_setup.sh after_script;
      echo "For QGIS Server Travis steps";
      scripts/misc/qgis_server_setup.sh after_script;
      echo "Stop NGINX server";
      sudo nginx -c `pwd`/scripts/misc/nginx_integration.conf -s stop;
      echo "Cleanup";
      paver reset_hard;
    fi

# after_success:
  # - codecov
  # - bash <(curl -s https://codecov.io/bash) -t 2c0e7780-1640-45f0-93a3-e103b057d8c8

notifications:
  # irc:
  #   channels:
  #     - "irc.freenode.org#geonode"
  #   use_notice: true
  email:
    - alessio.fabiani@gmail.com
  #   - ingenieroariel@gmail.com
  #   - simone.dalmasso@gmail.com
  # slack: geonode-sprint:oQylJRkU9feZ8JruGi6czWwe
