name: Run GeoNode Test Suite
on:
  workflow_call:
    inputs:
      suite_name:
        required: true
        type: string
      test_command:
        required: true
        type: string

jobs:
  run_suite:
    name: ${{ inputs.suite_name }}
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built Docker images
        uses: actions/download-artifact@v4
        with:
          name: docker-images
          path: docker_images

      - name: Load Docker images
        run: docker load -i docker_images/django.tar

      - name: Start the stack
        run: docker compose --env-file .env_test -f docker-compose-test.yml up -d

      - name: Setup test databases
        run: |
          docker compose --env-file .env_test -f docker-compose-test.yml exec db psql -U postgres -c "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE pid <> pg_backend_pid();"
          docker compose --env-file .env_test -f docker-compose-test.yml exec db createdb -U postgres -T postgres test_postgres
          docker compose --env-file .env_test -f docker-compose-test.yml exec db createdb -U postgres -T postgres test_geonode
          docker compose --env-file .env_test -f docker-compose-test.yml exec db createdb -U postgres -T postgres test_geonode_data
          docker compose --env-file .env_test -f docker-compose-test.yml exec db psql -U postgres -d test_geonode -c "CREATE EXTENSION IF NOT EXISTS postgis;"
          docker compose --env-file .env_test -f docker-compose-test.yml exec db psql -U postgres -d test_geonode_data -c "CREATE EXTENSION IF NOT EXISTS postgis;"

      - name: Run ${{ inputs.suite_name }}
        run: |
          docker compose --env-file .env_test -f docker-compose-test.yml exec -T django bash -s <<'BASH'
          set -euo pipefail
          ${{ inputs.test_command }}
          BASH

      - name: Codecov
        run: |
          docker compose --env-file .env_test -f docker-compose-test.yml exec django bash -c "bash <(curl -s https://codecov.io/bash) -t 2c0e7780-1640-45f0-93a3-e103b057d8c8"

      - name: Stop the stack
        if: always()
        run: docker compose --env-file .env_test -f docker-compose-test.yml down -v
