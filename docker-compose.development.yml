version: '2.2'
services:

  celery:
    build: .
    command: celery worker --app=geonode.celery_app:app --broker=amqp://guest:guest@rabbitmq:5672/ -B -l DEBUG
    depends_on:
      - db
      - elasticsearch
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - statics:/mnt/volumes/statics
      - geoserver-data-dir:/geoserver_data/data
    environment:
      - DOCKER_ENV=${SET_DOCKER_ENV}
      - IS_CELERY=True
      - DEBUG=True
      - GEONODE_LB_HOST_IP=localhost
      - GEONODE_LB_PORT=80
      - SITEURL=http://localhost/
      - ALLOWED_HOSTS=['localhost', ]
      - GEOSERVER_PUBLIC_LOCATION=http://localhost/geoserver/
      - GEOSERVER_WEB_UI_LOCATION=http://localhost/geoserver/

  django:
    build: .
    command: python manage.py runserver --settings=geonode.settings 0.0.0.0:8000
    volumes:
      - .:/usr/src/app
      - statics:/mnt/volumes/statics
      - geoserver-data-dir:/geoserver_data/data
    environment:
      - DOCKER_ENV=${SET_DOCKER_ENV}
      - IS_CELERY=False
      - DEBUG=True
      - GEONODE_LB_HOST_IP=localhost
      - GEONODE_LB_PORT=80
      - SITEURL=http://localhost/
      - ALLOWED_HOSTS=['localhost', ]
      - GEOSERVER_PUBLIC_LOCATION=http://localhost/geoserver/
      - GEOSERVER_WEB_UI_LOCATION=http://localhost/geoserver/

  geoserver:
    depends_on:
      - db
      - elasticsearch
      - rabbitmq
      - data-dir-conf
    environment:
      - GEONODE_LB_HOST_IP=localhost
      - GEONODE_LB_PORT=80

  geonode:
    image: geonode/nginx:${SET_DOCKER_ENV}
    restart: unless-stopped
    container_name: nginx4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: nginx
        org.geonode.instance.name: geonode
    depends_on:
      - django
      - celery
      - geoserver
    ports:
      - 80:80
