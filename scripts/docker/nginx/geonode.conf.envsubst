include /etc/nginx/mime.types;

# This is the main geonode conf
charset     utf-8;

# max upload size
client_max_body_size 100G;
client_body_buffer_size 256K;
client_body_timeout 600s;
large_client_header_buffers 4 64k;
proxy_read_timeout 600s;
uwsgi_read_timeout 600s;

fastcgi_hide_header Set-Cookie;

etag on;

# compression
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_http_version 1.1;
gzip_disable "MSIE [1-6]\.";
gzip_buffers 16 8k;
gzip_min_length 1100;
gzip_comp_level 6;
gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        application/xml
        application/xml+rss
        application/javascript
        application/x-javascript
        application/json;

# GeoServer
location /geoserver {

    # Using a variable is a trick to let Nginx start even if upstream host is not up yet
    # (see https://sandro-keil.de/blog/2017/07/24/let-nginx-start-if-upstream-host-is-unavailable-or-down/)
    set $upstream geoserver:8080;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://$upstream;
}

# Jenkins
location /jenkins {

    # Using a variable is a trick to let Nginx start even if upstream host is not up yet
    # (see https://sandro-keil.de/blog/2017/07/24/let-nginx-start-if-upstream-host-is-unavailable-or-down/)
    set $upstream jenkins:$JENKINS_HTTP_PORT;
    # set $upstream $HTTP_HOST$HTTPS_HOST:$JENKINS_HTTP_PORT;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://$upstream;
}

# GeoNode
location /static/ {
  alias /mnt/volumes/statics/static/;

  location ~* \.(?:html|js|jpg|jpeg|gif|png|css|tgz|gz|rar|bz2|doc|pdf|ppt|tar|wav|bmp|ttf|rtf|swf|ico|flv|txt|woff|woff2|svg|xml)$ {
      gzip_static always;
      expires 30d;
      access_log off;
      add_header Pragma "public";
      add_header Cache-Control "max-age=31536000, public";
  }
}

location /uploaded/ {
  alias /mnt/volumes/statics/uploaded/;

  location ~* \.(?:html|js|jpg|jpeg|gif|png|css|tgz|gz|rar|bz2|doc|pdf|ppt|tar|wav|bmp|ttf|rtf|swf|ico|flv|txt|woff|woff2|svg|xml)$ {
      gzip_static always;
      expires 30d;
      access_log off;
      add_header Pragma "public";
      add_header Cache-Control "max-age=31536000, public";
  }
}

location / {
  # Using a variable is a trick to let Nginx start even if upstream host is not up yet
  # (see https://sandro-keil.de/blog/2017/07/24/let-nginx-start-if-upstream-host-is-unavailable-or-down/)
  set $upstream django:8000;

  if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS";
      add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
      add_header Access-Control-Allow-Credentials true;
      add_header Content-Length 0;
      add_header Content-Type text/plain;
      add_header Access-Control-Max-Age 1728000;
      return 200;
  }

  add_header Access-Control-Allow-Credentials false;
  add_header Access-Control-Allow-Headers "Content-Type, Accept, Authorization, Origin, User-Agent";
  add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS";

  proxy_connect_timeout       600;
  proxy_send_timeout          600;
  proxy_read_timeout          600;
  send_timeout                600;
  proxy_redirect              off;
  proxy_set_header            Host $host;
  proxy_set_header            X-Real-IP $remote_addr;
  proxy_set_header            X-Forwarded-Host $server_name;
  proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header            X-Forwarded-Proto $scheme;
  proxy_hide_header           X-Frame-Options;
  proxy_request_buffering     off;

  # uwsgi_params
  include /etc/nginx/uwsgi_params;

  # proxy_pass http://$upstream;
  uwsgi_pass $upstream;

  # when a client closes the connection then keep the channel to uwsgi open. Otherwise uwsgi throws an IOError
  uwsgi_ignore_client_abort on;
  uwsgi_request_buffering off;

  location ~* \.(?:js|jpg|jpeg|gif|png|tgz|gz|rar|bz2|doc|pdf|ppt|tar|wav|bmp|ttf|rtf|swf|ico|flv|woff|woff2|svg|xml)$ {
      gzip_static always;
      expires 30d;
      access_log off;
      add_header Pragma "public";
      add_header Cache-Control "max-age=31536000, public";
  }
}
