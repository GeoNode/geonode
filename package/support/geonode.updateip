#!/bin/bash

usage () {
    bname="$(basename $0)"
    ret="$1"

    cat <<EOF
USAGE:
  $bname <newip>
      substitute SITEURL with <newip>, append it
      to ALLOWED_HOSTS in local_settings.py
      and geoserver printing config lists
  $bname <-r|--replace> <newip>
      substitute SITEURL and ALLOWED_HOSTS with <newip>
      in local_settings.py, append it to geoserver
      printing config list
  $bname <-h|--help>
      this help
EOF

    exit $ret
}

IS_REPLACE=0
while [ "$1" ]; do
    case "$1" in
        -r|--replace)
            IS_REPLACE=1
            shift
            ;;
        -h|--help)
            usage 0
            ;;
        -*)
            usage 1
            ;;
        *)
            break
            ;;
    esac
done
NEWIP="$1"

if [[ $UID != 0 ]]; then
    echo "Please run this script with sudo:"
    echo "sudo $0 $*"
    exit 1
fi

GEONODE_ETC=${GEONODE_ETC:-/etc/geonode}
GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR:-/usr/share/geoserver/data}
TOMCAT_SERVICE=${TOMCAT_SERVICE:-"invoke-rc.d tomcat8"}
APACHE_SERVICE=${APACHE_SERVICE:-"invoke-rc.d apache2"}

# Replace SITEURL in $GEONODE_ETC/local_settings.py
echo "Replacing SITEURL value with '$NEWIP' in $GEONODE_ETC/local_settings.py ... " | tr -d '\n'
sed -i "s@\(SITEURL[ 	]*=[ 	]*\).*@\1\'http://$NEWIP\/'@g" $GEONODE_ETC/local_settings.py
echo "done."

echo "Adding entry for '$NEWIP' in $GEOSERVER_DATA_DIR/printing/config.yaml ... " | tr -d '\n'
printing_config=$GEOSERVER_DATA_DIR/printing/config.yaml

if grep -q "$NEWIP" "$printing_config"
then
    echo "'$NEWIP' already found to the printing whitelist."
else
    sed -i "s#hosts:#hosts:\n  - !ipMatch\n    ip: $NEWIP#g" $printing_config
    echo "done."
fi

# if ALLOWED_HOSTS already exists ...
# if grep -q "^[ 	]*ALLOWED_HOSTS[ 	]*=" "$GEONODE_ETC/local_settings.py"
# then
#     if [ $IS_REPLACE -eq 1 ]
#     then
#         echo "Replacing ALLOWED_HOSTS in $GEONODE_ETC/local_settings.py ... " | tr -d '\n'
#         sed -i "s/^\([ 	]*ALLOWED_HOSTS[ 	]*=\).*/\1 [ 'localhost', '$NEWIP', ]/g" "$GEONODE_ETC/local_settings.py"
#         echo "done."
#     else
#         echo "Adding $NEWIP to ALLOWED_HOSTS in $GEONODE_ETC/local_settings.py ... " | tr -d '\n'
#         items="$(grep "^[ 	]*ALLOWED_HOSTS[ 	]*=" "$GEONODE_ETC/local_settings.py" | \
#                  sed 's/^[ 	]*ALLOWED_HOSTS[ 	]*=[ 	]*\[//g;s/\][ 	]*$//g')"
#         already_found=0
#         oldifs="$IFS"
#         IFS=','
#         for item in $items
#         do
#             item_cls="$(echo "$item" | sed "s/^[ 	]*['\"]//g;s/['\"][ 	]*$//g")"
#             if [ "$item_cls" = "$NEWIP" ]
#             then
#                 already_found=1
#                 break
#             fi
#         done
#         IFS="$oldifs"
#         if [ $already_found -eq 0 ]
#         then
#             if echo "$items" | grep -q ',[ 	]*$'
#             then
#                 items="${items}'$NEWIP', "
#             else
#                 items="${items}, '$NEWIP', "
#             fi
#             sed -i "s/^\([ 	]*ALLOWED_HOSTS[ 	]*=\).*/\1 [ $items ]/g" "$GEONODE_ETC/local_settings.py"
#             echo "done."
#         else
#             echo "'$NEWIP' already found in ALLOWED_HOSTS list."
#         fi
#     fi
# else
#     echo "Adding ALLOWED_HOSTS with in $GEONODE_ETC/local_settings.py ... " | tr -d '\n'
#     echo "ALLOWED_HOSTS=['localhost', '$NEWIP', ]" >> $GEONODE_ETC/local_settings.py
#     echo "done."
# fi


# silence the warnings from executing geonode command or they will pollute the commands output
if grep -q "^[ 	]*SILENCED_SYSTEM_CHECKS[ 	]*=" "$GEONODE_ETC/local_settings.py"
then
    true
else
    echo "SILENCED_SYSTEM_CHECKS = ['1_8.W001', 'fields.W340']" >> $GEONODE_ETC/local_settings.py
fi

geonode fixsitename

echo "Setting up oauth"
# Set oauth keys
oauth_keys=$(geonode fixoauthuri 2>&1)
client_id=`echo $oauth_keys | cut -d \, -f 1`
client_secret=`echo $oauth_keys | cut -d \, -f 2`
oauth_config="$GEOSERVER_DATA_DIR/security/filter/geonode-oauth2/config.xml"
sed -i "s|<cliendId>.*</cliendId>|<cliendId>$client_id</cliendId>|g" $oauth_config
sed -i "s|<clientSecret>.*</clientSecret>|<clientSecret>$client_secret</clientSecret>|g" $oauth_config
sed -i "s|<accessTokenUri>.*</accessTokenUri>|<accessTokenUri>http://$NEWIP/o/token/</accessTokenUri>|g" $oauth_config
sed -i "s|<userAuthorizationUri>.*</userAuthorizationUri>|<userAuthorizationUri>http://$NEWIP/o/authorize/</userAuthorizationUri>|g" $oauth_config
sed -i "s|<redirectUri>.*</redirectUri>|<redirectUri>http://$NEWIP/geoserver/</redirectUri>|g" $oauth_config
sed -i "s|<checkTokenEndpointUrl>.*</checkTokenEndpointUrl>|<checkTokenEndpointUrl>http://$NEWIP/api/o/v4/tokeninfo/</checkTokenEndpointUrl>|g" $oauth_config
sed -i "s|<logoutUri>.*</logoutUri>|<logoutUri>http://$NEWIP/account/logout/</logoutUri>|g" $oauth_config

sed -i "s/localhost:8000/$NEWIP/g" $oauth_config
sed -i "s/localhost:8080/$NEWIP/g" $oauth_config
sed -i "s/localhost/$NEWIP/g" $oauth_config
sed -i "s/localhost/$NEWIP/g" $oauth_config

sed -i "s|<baseUrl>.*</baseUrl>|<baseUrl>http://$NEWIP</baseUrl>|g" "$GEOSERVER_DATA_DIR/security/role/geonode REST role service/config.xml"
sed -i "s/localhost:8000/$NEWIP/g" "$GEOSERVER_DATA_DIR/security/role/geonode REST role service/config.xml"
sed -i "s/localhost/$NEWIP/g" "$GEOSERVER_DATA_DIR/security/role/geonode REST role service/config.xml"

sed -i "s|<proxyBaseUrl>.*</proxyBaseUrl>|<proxyBaseUrl>http://$NEWIP/geoserver</proxyBaseUrl>|g" "$GEOSERVER_DATA_DIR/global.xml"
sed -i "s/localhost:8080/$NEWIP/g" "$GEOSERVER_DATA_DIR/global.xml"
sed -i "s/localhost/$NEWIP/g" "$GEOSERVER_DATA_DIR/global.xml"

# Restart tomcat server
$TOMCAT_SERVICE restart

echo "Waiting Tomcat Service to Restart..."
sleep 30s

# Restart apache server
$APACHE_SERVICE restart
echo "Waiting Apache HTTPD Service to Restart..."
sleep 5s

# Run updatelayers
geonode updatelayers
geonode set_all_layers_alternate
geonode set_all_layers_metadata

# Run updatemaplayerip
geonode updatemaplayerip
