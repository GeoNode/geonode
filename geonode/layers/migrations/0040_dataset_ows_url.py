# Generated by Django 3.2.4 on 2021-07-21 15:29

from django.urls import reverse
from django.conf import settings
from urllib.parse import urljoin
from django.db import migrations, models

from geonode.utils import OGC_Servers_Handler
from geonode.services.enumerations import INDEXED

ogc_settings = OGC_Servers_Handler(settings.OGC_SERVER)['default']


def update_ows_url(apps, schema_editor):
    """Updating Layer 'ows_url' if referencing an INDEXED Remote Service
    """
    MyModel = apps.get_model('layers', 'Dataset')
    FkModel = apps.get_model('services', 'Service')

    def _lambda(x): return x[1] if not x[2] else urljoin(settings.SITEURL, reverse('service_proxy', args=[x[0]]))

    for _m in MyModel.objects.filter(models.Q(remote_service__isnull=False) & models.Q(remote_service__method=INDEXED)):
        service_url_query = FkModel.objects.filter(pk=_m.remote_service).values_list('id', 'base_url', 'proxy_base')[:1]
        MyModel.objects.filter(pk=_m).update(
            ows_url=_lambda(list(service_url_query)[0])
        )


class Migration(migrations.Migration):

    dependencies = [
        ('layers', '0039_auto_20210720_1311'),
    ]

    operations = [
        migrations.AddField(
            model_name='dataset',
            name='ows_url',
            field=models.URLField(blank=True, default=urljoin(ogc_settings.PUBLIC_LOCATION, 'ows'),
                                  help_text='The URL of the OWS service providing this layer, if any exists.', null=True, verbose_name='ows URL'),
        ),
        migrations.RunPython(update_ows_url, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='dataset',
            name='ows_url',
            field=models.URLField(blank=True, help_text='The URL of the OWS service providing this layer, if any exists.', null=True, verbose_name='ows URL'),
        ),
    ]
