{
  "name": "mute-stream",
<<<<<<< HEAD
  "version": "0.0.5",
=======
  "version": "0.0.6",
>>>>>>> 1d4070b30cfeda37af9b48f913adaf75784c0535
  "main": "mute.js",
  "directories": {
    "test": "test"
  },
  "devDependencies": {
<<<<<<< HEAD
    "tap": "~0.2.5"
=======
    "tap": "^1.2.0"
>>>>>>> 1d4070b30cfeda37af9b48f913adaf75784c0535
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
<<<<<<< HEAD
    "url": "git://github.com/isaacs/mute-stream"
=======
    "url": "git://github.com/isaacs/mute-stream.git"
>>>>>>> 1d4070b30cfeda37af9b48f913adaf75784c0535
  },
  "keywords": [
    "mute",
    "stream",
    "pipe"
  ],
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "license": "ISC",
  "description": "Bytes go in, but they don't come out (when muted).",
<<<<<<< HEAD
  "readme": "# mute-stream\n\nBytes go in, but they don't come out (when muted).\n\nThis is a basic pass-through stream, but when muted, the bytes are\nsilently dropped, rather than being passed through.\n\n## Usage\n\n```javascript\nvar MuteStream = require('mute-stream')\n\nvar ms = new MuteStream(options)\n\nms.pipe(process.stdout)\nms.write('foo') // writes 'foo' to stdout\nms.mute()\nms.write('bar') // does not write 'bar'\nms.unmute()\nms.write('baz') // writes 'baz' to stdout\n\n// can also be used to mute incoming data\nvar ms = new MuteStream\ninput.pipe(ms)\n\nms.on('data', function (c) {\n  console.log('data: ' + c)\n})\n\ninput.emit('data', 'foo') // logs 'foo'\nms.mute()\ninput.emit('data', 'bar') // does not log 'bar'\nms.unmute()\ninput.emit('data', 'baz') // logs 'baz'\n```\n\n## Options\n\nAll options are optional.\n\n* `replace` Set to a string to replace each character with the\n  specified string when muted.  (So you can show `****` instead of the\n  password, for example.)\n\n* `prompt` If you are using a replacement char, and also using a\n  prompt with a readline stream (as for a `Password: *****` input),\n  then specify what the prompt is so that backspace will work\n  properly.  Otherwise, pressing backspace will overwrite the prompt\n  with the replacement character, which is weird.\n\n## ms.mute()\n\nSet `muted` to `true`.  Turns `.write()` into a no-op.\n\n## ms.unmute()\n\nSet `muted` to `false`\n\n## ms.isTTY\n\nTrue if the pipe destination is a TTY, or if the incoming pipe source is\na TTY.\n\n## Other stream methods...\n\nThe other standard readable and writable stream methods are all\navailable.  The MuteStream object acts as a facade to its pipe source\nand destination.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/isaacs/mute-stream/issues"
  },
  "_id": "mute-stream@0.0.5",
  "dist": {
    "shasum": "8ae11ec0b553b69d73640ec88ad1e60ef858a9ba"
  },
  "_from": "mute-stream@~0.0.4",
  "_resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.5.tgz"
=======
  "gitHead": "3c0b793839b923b8d8a86a3d07f70fa451e30348",
  "bugs": {
    "url": "https://github.com/isaacs/mute-stream/issues"
  },
  "homepage": "https://github.com/isaacs/mute-stream#readme",
  "_id": "mute-stream@0.0.6",
  "_shasum": "48962b19e169fd1dfc240b3f1e7317627bbc47db",
  "_from": "mute-stream@~0.0.4",
  "_npmVersion": "3.7.0",
  "_nodeVersion": "5.6.0",
  "_npmUser": {
    "name": "isaacs",
    "email": "i@izs.me"
  },
  "dist": {
    "shasum": "48962b19e169fd1dfc240b3f1e7317627bbc47db",
    "tarball": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.6.tgz"
  },
  "maintainers": [
    {
      "name": "isaacs",
      "email": "i@izs.me"
    }
  ],
  "_npmOperationalInternal": {
    "host": "packages-9-west.internal.npmjs.com",
    "tmp": "tmp/mute-stream-0.0.6.tgz_1455343284080_0.04852168820798397"
  },
  "_resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.6.tgz"
>>>>>>> 1d4070b30cfeda37af9b48f913adaf75784c0535
}
