# Generated by Django 3.2.23 on 2024-09-09 12:36

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0099_auto_20240827_0828'),
    ]

    operations = [
        migrations.AlterField(
            model_name='funder',
            name='award_number',
            field=models.CharField(blank=True, help_text='List of funders, funded dataset creators', max_length=255, null=True, verbose_name='Award Number'),
        ),
        migrations.AlterField(
            model_name='funder',
            name='award_title',
            field=models.CharField(blank=True, help_text='The human readable title of the award (grant). (e.g. MOTivational strength of ecosystem services)', max_length=255, null=True, verbose_name='Award Title'),
        ),
        migrations.AlterField(
            model_name='funder',
            name='award_uri',
            field=models.CharField(blank=True, help_text='The URI leading to a page provided by the funder for more information about the award (grant). (e.g. http://cordis.europa.eu/project/rcn/100180_en.html)', max_length=255, null=True, verbose_name='Award URI'),
        ),
        migrations.AlterField(
            model_name='fundingreference',
            name='abbreviation',
            field=models.CharField(blank=True, help_text='abbreviation of the Institutions names. (e.g. BMBF)', max_length=255, null=True, verbose_name='Abbreviation'),
        ),
        migrations.AlterField(
            model_name='fundingreference',
            name='address_information',
            field=models.CharField(blank=True, help_text='Address of the Institutions', max_length=255, null=True, verbose_name='Address Information'),
        ),
        migrations.AlterField(
            model_name='fundingreference',
            name='contact_information',
            field=models.CharField(blank=True, help_text='Contact Information of the Institutions', max_length=255, null=True, verbose_name='Contact Information'),
        ),
        migrations.AlterField(
            model_name='fundingreference',
            name='name_of_the_institution',
            field=models.CharField(blank=True, help_text='Name of the institution provider. (e.g. European Commission)', max_length=255, null=True, verbose_name='Name of the Institution'),
        ),
        migrations.AlterField(
            model_name='fundingreference',
            name='ror',
            field=models.CharField(blank=True, help_text='Uniquely identifies a funding entity, according to various types. (e.g. http://doi.org/10.13039/501100000780)', max_length=255, null=True, verbose_name='RoR'),
        ),
        migrations.AlterField(
            model_name='relatedidentifier',
            name='related_identifier',
            field=models.CharField(blank=True, help_text='Identifiers of related resources. These must be globally unique identifiers.', max_length=255, verbose_name='Related Identifier'),
        ),
        migrations.AlterField(
            model_name='relatedidentifiertype',
            name='description',
            field=models.CharField(help_text='label description', max_length=255, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='relatedidentifiertype',
            name='label',
            field=models.CharField(help_text='related identifier, available identifier types', max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='Label'),
        ),
        migrations.AlterField(
            model_name='relatedproject',
            name='display_name',
            field=models.CharField(help_text='Name of the hierarchy levels for which the metadata is provided. (e.g. signal)', max_length=255, verbose_name='Display Name'),
        ),
        migrations.AlterField(
            model_name='relatedproject',
            name='label',
            field=models.CharField(help_text='label of the hierarchy levels for which the metadata is provided. (e.g. SIGNAL)', max_length=255, unique=True, verbose_name='Label'),
        ),
        migrations.AlterField(
            model_name='relationtype',
            name='description',
            field=models.CharField(help_text='Description of the relationship of the resource being registered (A) and the related resource (B). If Related identifier is used Relation type is mandatory', max_length=255, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='relationtype',
            name='label',
            field=models.CharField(help_text='Description of the relationship of the resource being registered (A) and the related resource (B). If Related identifier is used Relation type is mandatory', max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='Label'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='abstract',
            field=models.CharField(help_text='brief narrative summary of the content of the resource(s)', max_length=2000, verbose_name='Abstract'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='abstract_translated',
            field=models.TextField(help_text='brief german narrative summary of the content of the resource(s)', max_length=2000, verbose_name='Abstract Translated'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='alternate',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Alternate'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='category',
            field=models.ForeignKey(blank=True, help_text='high-level geographic data thematic classification to assist in the grouping and search of available geographic data sets.', limit_choices_to=models.Q(('is_choice', True)), null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.topiccategory', verbose_name='Category'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='conformity_explanation',
            field=models.CharField(blank=True, help_text='Give an Explanation about the conformity check. (e.g. See the referenced specification.', max_length=2000, verbose_name='Conformity Explanation'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='conformity_results',
            field=models.CharField(choices=[('Passed', 'Passed'), ('Not Passed', 'Not Passed'), ('Unknown', 'Unknown')], default='Unknown', help_text='This is the degree of conformity of the dataset to the implementing rules the BonaRes Schema.', max_length=40, verbose_name='Conformity Result'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='constraints_other',
            field=models.TextField(blank=True, help_text='other restrictions and legal prerequisites for accessing and using the resource or metadata by User', null=True, verbose_name='Other Constraints'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='contacts',
            field=models.ManyToManyField(through='base.ContactRole', to=settings.AUTH_USER_MODEL, verbose_name='Contacts'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='data_quality_statement',
            field=models.TextField(blank=True, help_text="general explanation of the data producer's knowledge about the lineage of a dataset", max_length=2000, null=True, verbose_name='Data Quality Statement'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='date',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='reference date for the cited resource', verbose_name='Date'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='date_accepted',
            field=models.DateField(blank=True, help_text='The date that the publisher accepted the resource into their system.', null=True, verbose_name='Date Accepted'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='date_available',
            field=models.DateField(default=datetime.date.today, help_text='The date the resource is made publicly available. To indicate the end of an embargo period.', verbose_name='Date Available'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='date_collected',
            field=models.DateField(blank=True, help_text='The date or date range in which the dataset content was collected', null=True, verbose_name='Date Collected'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='date_copyrighted',
            field=models.DateField(blank=True, help_text='The specific, documented date at which the dataset receives a copyrighted status, if applicable.', null=True, verbose_name='Date Copyrighted'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='date_created',
            field=models.DateField(default=datetime.date.today, help_text='The date the resource itself was put together; a single date for a final component, e.g. the finalised file with all of  the data.', verbose_name='Date Created'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='date_issued',
            field=models.DateField(blank=True, help_text='The date that the resource is published or distributed e.g. to a data centre.', null=True, verbose_name='Date Issued'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='date_submitted',
            field=models.DateField(blank=True, help_text='The date the creator submits the resource to the publisher. This could be different from Accepted if the publisher the applies a selection process. To indicate the start of an embargo period. ', null=True, verbose_name='Date Submitted'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='date_type',
            field=models.CharField(choices=[('creation', 'Creation'), ('publication', 'Publication'), ('revision', 'Revision')], default='publication', help_text='identification of when a given event occurred', max_length=255, verbose_name='Date Type'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='date_updated',
            field=models.DateField(default=datetime.date.today, help_text='The date of the last update (last revision) to the dataset, when the dataset is being added to.', verbose_name='Date Updated'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='date_valid',
            field=models.DateField(blank=True, help_text='The date or date range during which the dataset or resource is accurate.', null=True, verbose_name='Date Valid'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='edition',
            field=models.CharField(blank=True, help_text='version of the cited resource', max_length=255, null=True, verbose_name='Edition'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='groups_geolimits',
            field=models.ManyToManyField(blank=True, null=True, related_name='groups_geolimits', to='base.GroupGeoLimit', verbose_name='Group Geo Limit'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='language',
            field=models.CharField(choices=[('abk', 'Abkhazian'), ('aar', 'Afar'), ('afr', 'Afrikaans'), ('amh', 'Amharic'), ('ara', 'Arabic'), ('asm', 'Assamese'), ('aym', 'Aymara'), ('aze', 'Azerbaijani'), ('bak', 'Bashkir'), ('ben', 'Bengali'), ('bih', 'Bihari'), ('bis', 'Bislama'), ('bre', 'Breton'), ('bul', 'Bulgarian'), ('bel', 'Byelorussian'), ('cat', 'Catalan'), ('chi', 'Chinese'), ('cos', 'Corsican'), ('dan', 'Danish'), ('dzo', 'Dzongkha'), ('eng', 'English'), ('fra', 'French'), ('epo', 'Esperanto'), ('est', 'Estonian'), ('fao', 'Faroese'), ('fij', 'Fijian'), ('fin', 'Finnish'), ('fry', 'Frisian'), ('glg', 'Gallegan'), ('ger', 'German'), ('gre', 'Greek'), ('kal', 'Greenlandic'), ('grn', 'Guarani'), ('guj', 'Gujarati'), ('hau', 'Hausa'), ('heb', 'Hebrew'), ('hin', 'Hindi'), ('hun', 'Hungarian'), ('ind', 'Indonesian'), ('ina', 'Interlingua (International Auxiliary language Association)'), ('iku', 'Inuktitut'), ('ipk', 'Inupiak'), ('ita', 'Italian'), ('jpn', 'Japanese'), ('kan', 'Kannada'), ('kas', 'Kashmiri'), ('kaz', 'Kazakh'), ('khm', 'Khmer'), ('kin', 'Kinyarwanda'), ('kir', 'Kirghiz'), ('kor', 'Korean'), ('kur', 'Kurdish'), ('oci', "Langue d 'Oc (post 1500)"), ('lao', 'Lao'), ('lat', 'Latin'), ('lav', 'Latvian'), ('lin', 'Lingala'), ('lit', 'Lithuanian'), ('mlg', 'Malagasy'), ('mlt', 'Maltese'), ('mar', 'Marathi'), ('mol', 'Moldavian'), ('mon', 'Mongolian'), ('nau', 'Nauru'), ('nep', 'Nepali'), ('nor', 'Norwegian'), ('ori', 'Oriya'), ('orm', 'Oromo'), ('pan', 'Panjabi'), ('pol', 'Polish'), ('por', 'Portuguese'), ('pus', 'Pushto'), ('que', 'Quechua'), ('roh', 'Rhaeto-Romance'), ('run', 'Rundi'), ('rus', 'Russian'), ('smo', 'Samoan'), ('sag', 'Sango'), ('san', 'Sanskrit'), ('scr', 'Serbo-Croatian'), ('sna', 'Shona'), ('snd', 'Sindhi'), ('sin', 'Singhalese'), ('ssw', 'Siswant'), ('slv', 'Slovenian'), ('som', 'Somali'), ('sot', 'Sotho'), ('spa', 'Spanish'), ('sun', 'Sudanese'), ('swa', 'Swahili'), ('tgl', 'Tagalog'), ('tgk', 'Tajik'), ('tam', 'Tamil'), ('tat', 'Tatar'), ('tel', 'Telugu'), ('tha', 'Thai'), ('tir', 'Tigrinya'), ('tog', 'Tonga (Nyasa)'), ('tso', 'Tsonga'), ('tsn', 'Tswana'), ('tur', 'Turkish'), ('tuk', 'Turkmen'), ('twi', 'Twi'), ('uig', 'Uighur'), ('ukr', 'Ukrainian'), ('urd', 'Urdu'), ('uzb', 'Uzbek'), ('vie', 'Vietnamese'), ('vol', 'Volapük'), ('wol', 'Wolof'), ('xho', 'Xhosa'), ('yid', 'Yiddish'), ('yor', 'Yoruba'), ('zha', 'Zhuang'), ('zul', 'Zulu')], default='eng', help_text='language used within the dataset', max_length=3, verbose_name='Language'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='maintenance_frequency',
            field=models.CharField(blank=True, choices=[('unknown', 'frequency of maintenance for the data is not known'), ('continual', 'data is repeatedly and frequently updated'), ('notPlanned', 'there are no plans to update the data'), ('daily', 'data is updated each day'), ('annually', 'data is updated every year'), ('asNeeded', 'data is updated as deemed necessary'), ('monthly', 'data is updated each month'), ('fortnightly', 'data is updated every two weeks'), ('irregular', 'data is updated in intervals that are uneven in duration'), ('weekly', 'data is updated on a weekly basis'), ('biannually', 'data is updated twice each year'), ('quarterly', 'data is updated every three months')], help_text='frequency with which modifications and deletions are made to the data after it is first produced', max_length=255, null=True, verbose_name='Maintenance Frequency'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='method_description',
            field=models.TextField(blank=True, help_text='The methodology employed for the study or research', max_length=2000, verbose_name='Method Description'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='other_description',
            field=models.TextField(blank=True, help_text='Other description information that does not fit into an existing category', max_length=2000, verbose_name='Other Description'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='parent_identifier',
            field=models.ForeignKey(blank=True, help_text='A file identifier of the metadata to which this metadata is a subset (child). (e.g. 73c0f49f-1502-48ee-b038-052563f36527)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.resourcebase', verbose_name='Parent Identifier'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='purpose',
            field=models.TextField(blank=True, help_text='summary of the intentions with which the resource(s) was developed', max_length=500, null=True, verbose_name='Purpose'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='regions',
            field=models.ManyToManyField(blank=True, help_text='keyword identifies a location', null=True, to='base.Region', verbose_name='Keywords Region'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='restriction_other',
            field=models.ManyToManyField(blank=True, help_text='limitation(s) placed upon the access or use of the data by User.', limit_choices_to=models.Q(('is_choice', True)), null=True, related_name='restriction_other', to='base.RestrictionCodeType', verbose_name='Other Restrictions'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='series_information',
            field=models.TextField(blank=True, help_text='Information about a repeating series, such as volumne, issue, number', max_length=2000, verbose_name='Series Information'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='spatial_representation_type',
            field=models.ForeignKey(blank=True, help_text='method used to represent geographic information in the dataset.', limit_choices_to=models.Q(('is_choice', True)), null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.spatialrepresentationtype', verbose_name='Spatial Representation Type'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='srid',
            field=models.CharField(default='EPSG:4326', max_length=30, verbose_name='srid'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='subtitle',
            field=models.TextField(blank=True, help_text='subtitle of the dataset', max_length=400, verbose_name='Subtitle'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='supplemental_information',
            field=models.TextField(default='No information provided', help_text='any other descriptive information about the dataset', max_length=2000, verbose_name='Supplemental Information'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='table_of_content',
            field=models.TextField(blank=True, help_text='A listing of the Table of Contents', max_length=2000, verbose_name='Table of Content'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='technical_info',
            field=models.TextField(blank=True, help_text='Detailed information that may be associated with design, implementation, operation, use, and/or maintenance of a process or system', max_length=2000, verbose_name='Technical Info'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='temporal_extent_end',
            field=models.DateTimeField(blank=True, help_text='time period covered by the content of the dataset (end)', null=True, verbose_name='Temporal Extent End'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='temporal_extent_start',
            field=models.DateTimeField(blank=True, help_text='time period covered by the content of the dataset (start)', null=True, verbose_name='Temporal Extent Start'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='title',
            field=models.CharField(help_text='name by which the cited resource is known', max_length=255, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='title_translated',
            field=models.CharField(blank=True, help_text='german name by which the cited resource is known', max_length=255, verbose_name='Title Translated'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='tkeywords',
            field=models.ManyToManyField(blank=True, help_text='formalised word(s) or phrase(s) from a fixed thesaurus used to describe the subject (space or comma-separated)', null=True, to='base.ThesaurusKeyword', verbose_name='Thesaurus Keywords'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='use_constraint_restrictions',
            field=models.ManyToManyField(blank=True, help_text='limitation(s) placed upon the access or use of the data by Admin.', null=True, to='base.RestrictionCodeType', verbose_name='Use Constraint Restrictions'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='users_geolimits',
            field=models.ManyToManyField(blank=True, null=True, related_name='users_geolimits', to='base.UserGeoLimit', verbose_name='User Geo Limit'),
        ),
    ]
