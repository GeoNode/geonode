# Generated by Django 3.2.23 on 2024-08-22 09:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0097_resourcebase_metadata_license'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='resourcebase',
            name='restriction_code_type',
        ),
        migrations.RemoveField(
            model_name='resourcebase',
            name='use_contraints',
        ),
        migrations.AddField(
            model_name='resourcebase',
            name='restriction_other',
            field=models.ManyToManyField(blank=True, help_text='limitation(s) placed upon the access or use of the data by User.', limit_choices_to=models.Q(('is_choice', True)), null=True, related_name='restriction_other', to='base.RestrictionCodeType', verbose_name='restrictions'),
        ),
        migrations.AddField(
            model_name='resourcebase',
            name='use_constraint_restrictions',
            field=models.ManyToManyField(blank=True, help_text='limitation(s) placed upon the access or use of the data by Admin.', null=True, to='base.RestrictionCodeType', verbose_name='Use Constrain Restrictions'),
        ),
        migrations.AlterField(
            model_name='funder',
            name='award_number',
            field=models.CharField(blank=True, help_text='List of funders, funded dataset creators', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='funder',
            name='award_title',
            field=models.CharField(blank=True, help_text='The human readable title of the award (grant). (e.g. MOTivational strength of ecosystem services)', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='funder',
            name='award_uri',
            field=models.CharField(blank=True, help_text='The URI leading to a page provided by the funder for more information about the award (grant). (e.g. http://cordis.europa.eu/project/rcn/100180_en.html)', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='funder',
            name='funding_reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.fundingreference'),
        ),
        migrations.AlterField(
            model_name='fundingreference',
            name='funder_identifier',
            field=models.CharField(blank=True, help_text='Uniquely identifies a funding entity, according to various types. (e.g. http://doi.org/10.13039/501100000780)', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='fundingreference',
            name='funder_identifier_type',
            field=models.CharField(blank=True, help_text='The type of the Identifier. (e.g. BMBF)', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='fundingreference',
            name='funder_name',
            field=models.CharField(blank=True, help_text='Name of the funding provider. (e.g. European Commission)', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='relatedidentifier',
            name='related_identifier',
            field=models.CharField(blank=True, help_text='Identifiers of related resources. These must be globally unique identifiers.', max_length=255),
        ),
        migrations.AlterField(
            model_name='relatedidentifier',
            name='related_identifier_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.relatedidentifiertype'),
        ),
        migrations.AlterField(
            model_name='relatedidentifier',
            name='relation_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.relationtype'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='constraints_other',
            field=models.TextField(blank=True, help_text='other restrictions and legal prerequisites for accessing and using the resource or metadata by User', null=True, verbose_name='restrictions other'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='related_projects',
            field=models.ManyToManyField(blank=True, help_text='Name of the hierarchy levels for which the metadata is provided. (e.g. SIGNAL)', null=True, related_name='related_projects', to='base.RelatedProject', verbose_name='Related Project'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='title_translated',
            field=models.CharField(blank=True, help_text='german name by which the cited resource is known', max_length=255, verbose_name='title_translated'),
        ),
        migrations.RemoveField(
            model_name='resourcebase',
            name='use_constrains',
        ),
        migrations.AddField(
            model_name='resourcebase',
            name='use_constrains',
            field=models.TextField(blank=True, help_text='other restrictions and legal prerequisites for accessing and using the resource or metadata by User', null=True, verbose_name='Use Constraints'),
        ),
    ]
